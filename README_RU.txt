1. Описание
   Данная программа предназначена для расчета времени отклика полупроводникового устройства
   на световой импульс.


2. Установка
   1) Для первоначальной установки программы разместить папку treada-launcher/ со всем содержимым в
      любой удобной директории на вашем компьютере.
   2) Перейти в директорию treada-launcher/installer_x64/
      и запустить installer.bat от имени администратора.
      Это установит Python (если он отсутствует на вашем компьютере)
      и все необходимые зависимости.
   3) Заменить имя файла wrapper/config/config.json.example на wrapper/config/config.json
      (Рекомендуется предварительно сохранить копию исходного config.json.example файла)

   4) Если установка зависимостей по каким-либо причинам завершилась неудачей:
      а) Перезапустить installer.bat из командной строки (cmd), запущенной от имени администратора,
         указав полный путь до файла installer.bat.
      б) Если это не помогло. При наличии возможности, проверить и установить подключение к интернету
         и повторно запустить installer.bat.

   Все критические ошибки, возникающие при работе установщика записываются в requirements_installer.log файл.
   По вопросам установки и эксплуатации программы обращайтесь: alex.bringold@gmail.com


3. Запуск базового режима работы программы - расчет времени отклика полупроводникового устройства на световой импульс

   Начальные значения переменных:
   CKLKRS 1. и ILUMEN 0
   в файле "MTUT" будут заданы автоматически.
   При переходе к этапу расчета прибора "со светом"
   необходимые значения этих переменных также
   будут заданы автоматически.

   1) Для начала работы необходимо задать все требуемые для расчета
      (кроме вышеперечисленных, которые будут определены автоматически)
      значания переменных в файле "MTUT".
      Файл "MTUT" как и остальные служебные файлы,
      необходимые для работы исполняемого файла TreadaTx_C.exe,
      расположен в директории TreadaTx_C\

   2) Для запуска программы в командной оболочке cmd,
      следует перейти в корневой каталог проекта (treada-launcher/) и использовать команду:
      py treada_launcher.py

   3) После запуска следует отследить окончание переходного процесса по значениям
      тока истока - первый столбец вывода программы и нажать комбинацию клавишь Ctrl + C
      для перехода ко 2-му этапу расчета.

   4) Отследить окончание переходного процесса на 2-м этапе аналогично шагу (3).
      Далее следует повторно нажать комбинацию Ctrl + C.

      Итоги работы программы:
      а) Будет сформирован краткий отчет в cmd, включающий входные параметры и время переходного процесса.
      б) Результаты расчета - входные данные и зависимость плотности тока от времени будут
         выведены в файл в директории data\.
         Название файла формируется следующим образом: res_u(<"Значение UDRM из MTUT">).txt
      Также будет выведен график переходного процесса при режиме расчета "со светом".

   5) Для окончательного завершения работы программы следует еще раз ввести Ctrl + C в командной оболочке.


4. Режим автоматического расчета нескольких напряжений (UDRM)
   Программа позволяет рассчитывать переходные процессы сразу для
   нескольких значений UDRM в автоматическом режиме, без дополнительного нажатия сочетания клавишь
   Ctrl + C между этапами работы и ручной замены значений UDRM в файле MTUT. Для этого следует:

   1) Перейти и открыть конфигурационный файл программы, расположенный в директории:
      treada-launcher\wrapper\config\config.json

   2) Установить флаги:
      "udrm_vector_mode": true
      "auto_ending": true

   3) Создать или открыть существующий файл в директории
   treada-launcher\data\input\UDRM.txt

   4) Ввести необходимые значения переменной UDRM в формате - каждое новое значение
      задается с новой строки, в столбец. В качестве разделителей десятичных дробей могут использоваться
      как точки, так и запятые.


5. Дополнительные возможности
   Программа имеет несколько дополнительных режимов работы, которые предоставляются посредством запуска
   с одним или несколькими аргументами командной строки.
   Пример: py .\treada_launcher.py --collect-distr --gui

   Доступные аргументы и режимы работы:
   *В скобках (--example) указаны дополнительные аргументы, которые могут быть использованы в комбинации с основными.
   --plot-res, -r                   - Построение диаграмм результатов расчета переходного процесса.
   --collect-distr, -d (--gui)      - Построение диаграмм распределений различных величин из временных WW файлов,
                                      генерируемых в результате работы программы "Treada".
                                      Для использования необходимо предварительно:
                                      а) До запуска расчета переходного процесса (основоной режим), задать параметр:
                                         "preserve_distributions": true
                                         в основном конфигурацинном файле программы:
                                         treada-launcher\wrapper\config\config.json
                                      б) После запуска программы с аргументом --collect-distr,
                                         ввести аргумент --extract в диалоговом окне терминала и следовать указаниям.
                                      Доступен графический режим работы (--gui)
                                      В графическом режиме:
                                      а) Выделить корневые папки, соответствующие этапам работы программы "Treada" в
                                         файловом менеджере.
                                      б) Нажать кнопку "Extract" и дождаться завершения процедуры.
                                      в) Выбрать необходимое распределение из выпадающего списка.
                                      г) Выбрать индексы необходимых для построения
                                         промежуточных результатов распределений (числовые значения).
   --plot-fields-integral, -f       - Рассчитать и построить интеграл электрического поля для последней точки
                                      первого этапа работы и последней точки второго.


Утилита создана на базе программы "Treada", разработанной Мартыновым Ярославом Борисовичем.
Узнать больше о данном проекте и его авторах можно перейдя по ссылке ниже:
https://github.com/OutlyingWest/treada-launcher.git
